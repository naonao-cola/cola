name: macOS

on:
  pull_request:
    branches:
      - main
      - 'dev'
    paths:
      - 'cola/**'
      - '.github/workflows/**'
  push:
    branches:
      - main
      - 'dev'
    paths:
      - 'cola/**'
      - '.github/workflows/**'

jobs:
  build:
    strategy:
      matrix:
        os: [macOS-latest]
        arch: [x86_64,arm64]
        mode: [debug, releasedbg]

    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install Clang 18
        run: |
          echo 'export PATH="/opt/homebrew/opt/llvm/bin:$PATH"' >> /Users/runner/.bash_profile
          export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
          source ~/.bash_profile
          brew install llvm@18
          llvm-config --version
          clang --version

      # Force xmake to a specific folder (for cache)
      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          # actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

       # Update xmake repository (in order to have the file that will be cached)
      - name: Update xmake repository
        run: xmake repo --update

      # Fetch xmake dephash
      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

       # Setup compilation mode and install project dependencies
      - name: Configure xmake and install dependencies
        run: xmake config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }}   --require=yes  --yes

      - name: Tests
        run: |
          brew link --force llvm
          echo 'export PATH="/opt/homebrew/opt/llvm/bin:$PATH"' >> /Users/runner/.bash_profile
          export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
          source ~/.bash_profile
          xmake clean -a
          xmake f  --toolchain=clang --cc=/opt/homebrew/opt/llvm/bin/clang --cxx=/opt/homebrew/opt/llvm/bin/clang++ --ldflags="-L/opt/homebrew/opt/llvm/lib/c++ -Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++"
          xmake --yes
          xmake run -a