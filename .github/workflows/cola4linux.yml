name: Linux

on:
  pull_request:
    branches:
      - 'dev'
    paths:
      - 'cola/**'
      - '.github/workflows/**'
  push:
    branches:
      - 'dev'
    paths:
      - 'cola/**'
      - '.github/workflows/**'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]
        mode: [debug, releasedbg]

    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}

    steps:
    #https://github.com/NazaraEngine/NazaraEngine/blob/main/.github/workflows/linux-build.yml
      - name: Get current date as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install gcc-13 g++-13
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 13
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 13
          g++ --version

      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@dev
          actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

      - name: Update xmake repository
        run: xmake repo --update

      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

      - name: Retrieve cached xmake dependencies
        id: restore-depcache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: Linux-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-xmake

      - name: Configure xmake and install dependencies
        run: xmake config --arch=${{ matrix.arch }} --mode=${{matrix.mode }}  --ccache=n --require=yes --yes

      # Save dependencies
      - name: Save cached xmake dependencies
        if: ${{ !steps.restore-depcache.outputs.cache-hit }}
        uses: actions/cache/save@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ steps.restore-depcache.outputs.cache-primary-key }}


      - name: Build the task
        run: |
          xmake clean -a
          xmake --yes -vD
          xmake run -a